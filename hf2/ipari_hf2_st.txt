PROGRAM PLC_PRG
(* Bemeneti fizikai változók *)
VAR_INPUT
	ProxyMain AT %IX0.0: BOOL; (* központi futószalag közelítésérzékeloje *)
	ProxyA AT %IX0.1: BOOL;    (* A töltogép közelítésérzékeloje *)
	LevelA AT %IX0.2: BOOL;    (* A töltogép szintérzékeloje *)
	AckA AT %IX0.3: BOOL;      (* A töltogép nyugtázó nyomógombja *)
	ProxyB AT %IX0.4: BOOL;    (* B töltogép közelítésérzékeloje *)
	LevelB AT %IX0.5: BOOL;    (* B töltogép szintérzékeloje *)
	AckB AT %IX0.6: BOOL;      (* B töltogép nyugtázó nyomógombja *)
END_VAR

(* Kimeneti fizikai változók *)
VAR_OUTPUT
	ConvMain AT %QX0.0: BOOL;  (* Központi futószalag muködtetése *)
	Diverter AT %QX0.1: BOOL;  (* Terelo helyzetének beállítása *) (* FALSE -> A; TRUE -> B *)
	ConvA AT %QX0.2: BOOL;     (* A töltogép futószalagjának muködtetése *)
	NozzleA AT %QX0.3: BOOL;   (* A töltogép fúvókájának nyitása *)
	AlarmA AT %QX0.4: BOOL;    (* A töltogép hibajelzo toronylámpája *)
	ConvB AT %QX0.5: BOOL;     (* B töltogép futószalagjának muködtetése *)
	NozzleB AT %QX0.6: BOOL;   (* B töltogép fúvókájának nyitása *)
	AlarmB AT %QX0.7: BOOL;    (* B töltogép hibajelzo toronylámpája *)
END_VAR

(* Egyéb változók *)
VAR
	SystemState: (Idle, Mozog, Tovabb_A, Tovabb_B) := Idle;
	A_Idle: BOOL := TRUE; (* A folyamat indulásakor üresek a gépek *)
	B_Idle: BOOL := TRUE; (* A folyamat indulásakor üresek a gépek *)
	Toltogep_A: Toltogep;
	Toltogep_B: Toltogep;
	rStart: R_TRIG;
	Start: BOOL;
END_VAR

(* Fo állapotgép *)
CASE SystemState OF
    Idle:
        IF A_Idle OR B_Idle OR rStart.Q THEN
            SystemState := Mozog;
        END_IF;
    Mozog:
        IF ProxyMain AND A_Idle THEN
            SystemState := Tovabb_A;
        ELSIF ProxyMain AND B_Idle THEN
            SystemState := Tovabb_B;
(*
	ELSIF ProxyMain AND NOT A_Idle AND NOT B_Idle THEN
		SystemState := Idle;
*)
        END_IF;
    Tovabb_A:
        Toltogep_A(UjDoboz:=TRUE,Proxy:=ProxyA,Level:=LevelA,Ack:=AckA,Szabad=>A_Idle);
        IF NOT ProxyMain THEN
            SystemState := Idle;
        ELSE
            SystemState := Mozog;
        END_IF;
    Tovabb_B:
        Toltogep_B(UjDoboz:=TRUE,Proxy:=ProxyB,Level:=LevelB,Ack:=AckB,Szabad=>B_Idle);
        IF NOT ProxyMain THEN
            SystemState := Idle;
        ELSE
            SystemState := Mozog;
        END_IF;
END_CASE;

(* Kimenetek állítása *)
(* A kimeneti változókhoz egy logikai kifejezés eredményét rendeljük minden ciklusban. (28. dia) *)
ConvMain := NOT(SystemState=Idle); (* Idle állapoton kívül minden más állapotban mozog a fo szalag *)
Diverter := (SystemState=Tovabb_B); (* Ha Tovabb_A, akkor Diverter 0; ha Tovabb_B, akkor Diverter 1 *)
(* Funkcióblokkok meghívása minden ciklusban *)
rStart(CLK:=Start);
Toltogep_A(Proxy:=ProxyA,Level:=LevelA,Ack:=AckA,Szabad=>A_Idle);
Toltogep_B(Proxy:=ProxyB,Level:=LevelB,Ack:=AckB,Szabad=>B_Idle);

(* Töltogép funkcióblokk *)
FUNCTION_BLOCK Toltogep

(* Bemeneti változók *)
VAR_INPUT
    UjDoboz: BOOL; (* új doboz érkezését jelzo logikai bemenet *)
    Proxy: BOOL;   (* közelítésérzékelo *)
    Level: BOOL;   (* szintérzékelo *)
    Ack: BOOL;     (* nyugtázó nyomógomb *)
END_VAR

(* Kimeneti változók *)
VAR_OUTPUT
    Conv: BOOL;   (* szalag *)
    Nozzle: BOOL; (* fúvóka *)
    Alarm: BOOL;  (*  hibajelzo toronylámpa *)
    Szabad: BOOL; (* az üresen várakozó állapotot jelzo logikai kimenet *)
    (* Szabad értéke TRUE, ha új doboz fogadására készen áll a töltogép *)
END_VAR

(* Egyéb változók *)
VAR
    (* Töltogép állapotai *)
    ToltogepState : (Idle, Betarolas, Toltes, Kitarolas, Hiba) := Idle;
    (* Idozítok *)
    Gombnyomas: R_TRIG; (* Nyugtázó nyomógomb felfutó élére menjünk át Idle állapotba *)
    HibaE: TON;
    (* Kitarolas állapotban 3 mp elteltével Idle vagy Betarolas állapotba kell menni *)
    Meg3mp: TP;
    HogyanTovabb: TON;
    VanEUj: F_TRIG;
END_VAR

(* Töltogép állapotgépe *)
CASE ToltogepState OF
    Idle:
        IF UjDoboz THEN
            ToltogepState := Betarolas;
        END_IF;
    Betarolas:
        IF Proxy THEN
            ToltogepState := Toltes;
        END_IF;
    Toltes:
        IF Level THEN
            ToltogepState := Kitarolas;
        END_IF;
        IF HibaE.Q THEN
            ToltogepState := Hiba;
        END_IF;
    Kitarolas:
        IF VanEUj.Q AND UjDoboz THEN
            ToltogepState := Betarolas;
        END_IF;
        IF VanEUj.Q AND NOT(UjDoboz) THEN
            ToltogepState := Idle;
        END_IF;
    Hiba:
        IF Gombnyomas.Q THEN
            ToltogepState := Idle;
        END_IF;
END_CASE

(* Kimenetek állítása *)
(* A kimeneti változókhoz egy logikai kifejezés eredményét rendeljük minden ciklusban. (28. dia) *)
Conv := (ToltogepState = Betarolas OR ToltogepState = Kitarolas OR Meg3mp.Q);
Nozzle := (ToltogepState = Toltes);
Alarm := (ToltogepState = Hiba);
Szabad := (ToltogepState = Idle OR ToltogepState = Kitarolas);

(* NOT Level ??? *)
Meg3mp(IN:=Level,PT:=T#3s);
VanEUj(CLK:=Meg3mp.Q);
Gombnyomas(CLK:=Ack); (* Nyugtázó nyomógomb felfutó élére menjünk át Idle állapotba *)
HibaE(IN:=Nozzle, PT:=T#10s); (* Ha Toltes állapotban (Nozzle üzemel) 10 mp elteltével a Level 0, akkor hiba van *)
HogyanTovabb(IN:=Level, PT:=T#3s); (* Kitarolas állapotban 3 mp elteltével Idle vagy Betarolas állapotba kell menni *)
